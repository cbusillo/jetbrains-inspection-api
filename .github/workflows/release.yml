name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Run tests
      run: ./gradlew test
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results
        path: build/reports/tests/test/
        retention-days: 7

  mcp-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mcp-server/package-lock.json
    
    - name: Install MCP dependencies
      run: cd mcp-server && npm ci
    
    - name: Test MCP server syntax
      run: cd mcp-server && node --check server.js
    
    - name: Run MCP server tests
      run: cd mcp-server && npm test

  release:
    needs: [test, mcp-test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build plugin
      run: ./gradlew buildPlugin
    
    - name: Get version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Generate changelog
      id: changelog
      run: |
        CURRENT_TAG="${{ steps.get_version.outputs.VERSION }}"
        PREV_TAG=$(git tag --sort=-version:refname | grep -v "^${CURRENT_TAG}$" | head -n 1)
        
        {
          echo 'CHANGELOG<<EOF'
          if [ -n "$PREV_TAG" ]; then
            echo "## Changes since $PREV_TAG"
            echo ""
            git log --pretty=format:"- %s" --no-merges ${PREV_TAG}..HEAD
          else
            echo "## Changes in this release"
            echo ""
            git log --pretty=format:"- %s" --no-merges -10
          fi
          echo 'EOF'
        } >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          
          1. Download the `jetbrains-inspection-api-${{ steps.get_version.outputs.VERSION }}.zip` file
          2. In your JetBrains IDE, go to **Settings** → **Plugins** → **⚙️** → **Install Plugin from Disk**
          3. Select the downloaded zip file and restart the IDE
          4. The plugin will be available on the IDE's built-in server port, you may need to enable it and external access.  
          
          ## MCP Integration
          
          ```bash
          # Add MCP server (replace /path/to with actual path and set IDE_PORT as needed)
          claude mcp add-json jetbrains '{"command": "node", "args": ["/path/to/jetbrains-inspection-api/mcp-server/server.js"], "env": {"IDE_PORT": "63340"}}'
          ```
        draft: false
        prerelease: false
        files: ./build/distributions/*.zip
    
